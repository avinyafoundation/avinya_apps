import ballerina/graphql;
publicisolatedclientclassGraphqlClient{finalgraphql:ClientgraphqlClient;publicisolatedfunctioninit(stringserviceUrl,ConnectionConfigconfig={})returnsgraphql:ClientError?{graphql:ClientConfigurationgraphqlClientConfig={timeout:config.timeout,forwarded:config.forwarded,poolConfig:config.poolConfig,compression:config.compression,circuitBreaker:config.circuitBreaker,retryConfig:config.retryConfig,validation:config.validation};do{if config.http1Settings is ClientHttp1Settings {
        ClientHttp1Settings settings = check config.http1Settings.ensureType(ClientHttp1Settings);
        graphqlClientConfig.http1Settings = {...settings};    }if config.cache is graphql:CacheConfig {
        graphqlClientConfig.cache = check config.cache.ensureType(graphql:CacheConfig);
    }
if config.responseLimits is graphql:ResponseLimitConfigs {
        graphqlClientConfig.responseLimits = check config.responseLimits.ensureType(graphql:ResponseLimitConfigs);
    }
if config.secureSocket is graphql:ClientSecureSocket {
        graphqlClientConfig.secureSocket = check config.secureSocket.ensureType(graphql:ClientSecureSocket);
    }
if config.proxy is graphql:ProxyConfig {
        graphqlClientConfig.proxy = check config.proxy.ensureType(graphql:ProxyConfig);
    }
}onfailvare{return<graphql:ClientError> error("GraphQL Client Error", e, body = ());}graphql:ClientclientEp=checknew(serviceUrl,graphqlClientConfig);self.graphqlClient=clientEp;}remoteisolatedfunctiongetPctiInstanceNotes(intpcti_instance_id)returnsGetPctiInstanceNotesResponse|graphql:ClientError{stringquery=string`query getPctiInstanceNotes($pcti_instance_id:Int!){pcti_instance_notes(pcti_instance_id:$pcti_instance_id){id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade child_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}parent_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}}}`;map<anydata>variables={"pcti_instance_id":pcti_instance_id};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetPctiInstanceNotesResponse> check performDataBinding(graphqlResponse, GetPctiInstanceNotesResponse);}remoteisolatedfunctiongetPerson(string?name=(),int?id=())returnsGetPersonResponse|graphql:ClientError{stringquery=string`query getPerson($id:Int,$name:String){person(id:$id,name:$name){id preferred_name full_name date_of_birth sex asgardeo_id jwt_sub_id jwt_email permanent_address{id city{id name{name_en}district{id name{name_en}province{id name{name_en}}}}}mailing_address{id city{id name{name_en}district{id name{name_en}province{id name{name_en}}}}}phone organization{id name{name_en}}avinya_type{id active global_type name foundation_type focus level description}notes nic_no passport_no id_no email child_students{id preferred_name full_name date_of_birth}parent_students{id preferred_name full_name date_of_birth}}}`;map<anydata>variables={"name":name,"id":id};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetPersonResponse> check performDataBinding(graphqlResponse, GetPersonResponse);}remoteisolatedfunctiongetPctiActivityNotes(intpcti_activity_id)returnsGetPctiActivityNotesResponse|graphql:ClientError{stringquery=string`query getPctiActivityNotes($pcti_activity_id:Int!){pcti_activity_notes(pcti_activity_id:$pcti_activity_id){id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade child_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}parent_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}}}`;map<anydata>variables={"pcti_activity_id":pcti_activity_id};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetPctiActivityNotesResponse> check performDataBinding(graphqlResponse, GetPctiActivityNotesResponse);}remoteisolatedfunctiongetPctiActivity(stringproject_activity_name,stringclass_activity_name)returnsGetPctiActivityResponse|graphql:ClientError{stringquery=string`query getPctiActivity($project_activity_name:String!,$class_activity_name:String!){pcti_activity(project_activity_name:$project_activity_name,class_activity_name:$class_activity_name){id name description avinya_type{id active global_type name foundation_type focus level description}notes child_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}parent_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}}}`;map<anydata>variables={"project_activity_name":project_activity_name,"class_activity_name":class_activity_name};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetPctiActivityResponse> check performDataBinding(graphqlResponse, GetPctiActivityResponse);}remoteisolatedfunctiongetActivity(string?name=(),int?id=())returnsGetActivityResponse|graphql:ClientError{stringquery=string`query getActivity($name:String,$id:Int){activity(name:$name,id:$id){id name description avinya_type{id active global_type name foundation_type focus level description}notes child_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}parent_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}}}`;map<anydata>variables={"name":name,"id":id};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetActivityResponse> check performDataBinding(graphqlResponse, GetActivityResponse);}remoteisolatedfunctiongetPctiParticipantActivities(intpcti_participant_id)returnsGetPctiParticipantActivitiesResponse|graphql:ClientError{stringquery=string`query getPctiParticipantActivities($pcti_participant_id:Int!){pcti_participant_activities(participant_id:$pcti_participant_id){id name description avinya_type{id active global_type name foundation_type focus level description}notes child_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}parent_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}}}`;map<anydata>variables={"pcti_participant_id":pcti_participant_id};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetPctiParticipantActivitiesResponse> check performDataBinding(graphqlResponse, GetPctiParticipantActivitiesResponse);}remoteisolatedfunctiongetActivityInstancesToday(intpcti_activity_id)returnsGetActivityInstancesTodayResponse|graphql:ClientError{stringquery=string`query getActivityInstancesToday($pcti_activity_id:Int!){activity_instances_today(activity_id:$pcti_activity_id){id name description activity_id notes daily_sequence weekly_sequence monthly_sequence start_time end_time created updated activity_participants{id activity_instance_id person{preferred_name}organization{id name{name_en}}start_date end_date role notes created updated}activity_participant_attendances{id activity_instance_id person{preferred_name}sign_in_time sign_out_time created updated}evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade child_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}parent_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}}}}`;map<anydata>variables={"pcti_activity_id":pcti_activity_id};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetActivityInstancesTodayResponse> check performDataBinding(graphqlResponse, GetActivityInstancesTodayResponse);}remoteisolatedfunctionaddActivity(Activityactivity)returnsAddActivityResponse|graphql:ClientError{stringquery=string`mutation addActivity($activity:Activity!){add_activity(activity:$activity){id name description avinya_type{id active global_type name foundation_type focus level description}notes child_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}parent_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}}}`;map<anydata>variables={"activity":activity};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<AddActivityResponse> check performDataBinding(graphqlResponse, AddActivityResponse);}remoteisolatedfunctionaddActivityInstance(ActivityInstanceactivityInstance)returnsAddActivityInstanceResponse|graphql:ClientError{stringquery=string`mutation addActivityInstance($activityInstance:ActivityInstance!){add_activity_instance(activityInstance:$activityInstance){id name description activity_id notes daily_sequence weekly_sequence monthly_sequence start_time end_time created updated activity_participants{id activity_instance_id person{preferred_name}organization{id name{name_en}}start_date end_date role notes created updated}activity_participant_attendances{id activity_instance_id person{preferred_name}sign_in_time sign_out_time created updated}evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade child_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}parent_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}}}}`;map<anydata>variables={"activityInstance":activityInstance};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<AddActivityInstanceResponse> check performDataBinding(graphqlResponse, AddActivityInstanceResponse);}remoteisolatedfunctionaddPctiNotes(Evaluationevaluation)returnsAddPctiNotesResponse|graphql:ClientError{stringquery=string`mutation addPctiNotes($evaluation:Evaluation!){add_pcti_notes(evaluation:$evaluation){id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade child_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}parent_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}}}`;map<anydata>variables={"evaluation":evaluation};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<AddPctiNotesResponse> check performDataBinding(graphqlResponse, AddPctiNotesResponse);}remoteisolatedfunctiongetPctiActivities()returnsGetPctiActivitiesResponse|graphql:ClientError{stringquery=string`query getPctiActivities{pcti_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes child_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}parent_activities{id name description avinya_type{id active global_type name foundation_type focus level description}notes activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}}activity_sequence_plan{id sequence_number timeslot_number organization{id name{name_en}}person{preferred_name}}activity_instances{id name description notes start_time end_time daily_sequence weekly_sequence monthly_sequence}}}`;map<anydata>variables={};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetPctiActivitiesResponse> check performDataBinding(graphqlResponse, GetPctiActivitiesResponse);}remoteisolatedfunctiongetActivityInstancesFuture(intactivityId)returnsGetActivityInstancesFutureResponse|graphql:ClientError{stringquery=string`query getActivityInstancesFuture($activityId:Int!){activity_instances_future(activity_id:$activityId){id name description activity_id notes daily_sequence weekly_sequence monthly_sequence start_time end_time created updated activity_participants{id activity_instance_id person{preferred_name}organization{id name{name_en}}start_date end_date role notes created updated}activity_participant_attendances{id activity_instance_id person{preferred_name}sign_in_time sign_out_time created updated}evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade child_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}parent_evaluations{id evaluatee_id evaluator_id evaluation_criteria_id updated notes grade}}}}`;map<anydata>variables={"activityId":activityId};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetActivityInstancesFutureResponse> check performDataBinding(graphqlResponse, GetActivityInstancesFutureResponse);}remoteisolatedfunctiongetAvailableTeachers(intactivityInstanceId)returnsGetAvailableTeachersResponse|graphql:ClientError{stringquery=string`query getAvailableTeachers($activityInstanceId:Int!){available_teachers(activity_instance_id:$activityInstanceId){id preferred_name full_name date_of_birth sex asgardeo_id jwt_sub_id jwt_email permanent_address{id city{id name{name_en}district{id name{name_en}province{id name{name_en}}}}}mailing_address{id city{id name{name_en}district{id name{name_en}province{id name{name_en}}}}}phone organization{id name{name_en}}avinya_type{id active global_type name foundation_type focus level description}notes nic_no passport_no id_no email child_students{id preferred_name full_name date_of_birth}parent_students{id preferred_name full_name date_of_birth}}}`;map<anydata>variables={"activityInstanceId":activityInstanceId};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<GetAvailableTeachersResponse> check performDataBinding(graphqlResponse, GetAvailableTeachersResponse);}remoteisolatedfunctionaddActivityParticipant(ActivityParticipantactivityParticipant)returnsAddActivityParticipantResponse|graphql:ClientError{stringquery=string`mutation addActivityParticipant($activityParticipant:ActivityParticipant!){add_activity_participant(activityParticipant:$activityParticipant){id activity_instance_id person{preferred_name}organization{id name{name_en}}start_date end_date role notes created updated}}`;map<anydata>variables={"activityParticipant":activityParticipant};jsongraphqlResponse=checkself.graphqlClient->executeWithType(query,variables);return<AddActivityParticipantResponse> check performDataBinding(graphqlResponse, AddActivityParticipantResponse);}}